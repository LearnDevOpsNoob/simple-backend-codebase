name: Deploy backend to EC2

# This triggers the workflow whenever you push to the 'main' branch
on:
  push:
    branches:
      - main    

jobs:
  deploy:
    name: Deploy backend to EC2
    runs-on: ubuntu-latest   # This runs the job on a GitHub-hosted Ubuntu server

    steps: 
      # Step 1: Check out the code
      - name: Checkout Code
        uses: actions/checkout@v4

      # Step 2: Save your EC2 private key securely on the runner
      - name: Add SSH Key
        run: |
          echo "${{ secrets.EC2_SSH_KEY }}" > ec2-key.pem
          chmod 600 ec2-key.pem
          # GitHub needs this private key to connect to your EC2 instance

      # Step 3: SSH into EC2 and run deployment commands
      - name: Connect to EC2 and Deploy
        run: |
          ssh -o StrictHostKeyChecking=no -i ec2-key.pem ${{ secrets.EC2_USERNAME }}@${{ secrets.EC2_HOST }} << 'EOF'
            # Navigate to the app directory
            cd ${{ secrets.EC2_APP_DIR }}

            # Load nvm and Node (source .bashrc for nvm to be available)
            . ~/.bashrc
            export NVM_DIR="$HOME/.nvm"
            [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
            nvm use --lts

            # Tell Git to use the correct GitHub deploy key
            export GIT_SSH_COMMAND='ssh -i ~/.ssh/id_ed25519_github -o IdentitiesOnly=yes'

            # âœ… Use correct GitHub SSH key for git pull
            ssh-agent bash -c 'ssh-add ~/.ssh/github_deploy_key; git pull origin main'


            # Install dependencies
            npm install

            # Start the server
            nohup node server.js > output.log 2>&1 &
          EOF

            # This final step connects to EC2, updates code, installs packages, and starts the server
